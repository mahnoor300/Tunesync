name: Generate debug APK

on:
  push:
  workflow_dispatch:

jobs:
  apk:
    name: Generate debug APK
    runs-on: windows-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Clean project
        run: |
          Remove-Item -Recurse -Force node_modules
          Remove-Item -Recurse -Force android/build
          yarn install --no-frozen-lockfile  # Reinstall dependencies

      # Upgrade Expo SDK with increased memory limit
      - name: Upgrade Expo SDK
        run: |
          node --max-old-space-size=4096 $(which yarn) add expo@latest
          node --max-old-space-size=4096 $(which yarn) add react-native@latest
          node --max-old-space-size=4096 $(which yarn) add react@latest
          node --max-old-space-size=4096 $(which yarn) add react-dom@latest
          node --max-old-space-size=4096 $(which yarn) add expo-modules-core@latest
          node --max-old-space-size=4096 $(which yarn) add expo-media-library@latest
          node --max-old-space-size=4096 $(which yarn) add @react-native-community/cli@latest

      # Install dependencies with increased memory limit
      - name: Install dependencies
        run: |
          node --max-old-space-size=4096 $(which yarn) install --frozen-lockfile

      # Grant execute permissions to gradlew
      - name: Grant execute permissions to gradlew
        run: chmod +x ./android/gradlew

      # Run the build process
      - name: Navigate to Android directory and clean build
        run: |
          cd ./android
          ./gradlew clean

      # Build debug APK with stacktrace for debugging
      - name: Build debug APK
        run: |
          cd android
          ./gradlew assembleDebug --stacktrace --info

      # Rename APK for output
      - name: Rename APK
        run: |
          mv "./app/build/outputs/apk/debug/app-debug.apk" "./app/build/outputs/apk/debug/${{ env.OUTPUT_NAME }}.apk"

      # Upload the APK as an artifact
      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_NAME }}
          path: app/build/outputs/apk/debug/${{ env.OUTPUT_NAME }}.apk
